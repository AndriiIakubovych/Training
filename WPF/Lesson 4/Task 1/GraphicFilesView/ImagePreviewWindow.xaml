<Window Name="imagePreviewWindow" x:Class="GraphicFilesView.ImagePreviewWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:GraphicFilesView" mc:Ignorable="d" Title="{ Binding Path=DisplayFileName }" Width="700" Height="500" MinWidth="700" MinHeight="500" Background="#1e1e1e" WindowState="Maximized" WindowStartupLocation="CenterScreen" WindowStyle="None" Icon="icon.ico" Loaded="ImagePreviewWindow_Loaded" LayoutUpdated="ImagePreviewWindow_LayoutUpdated" SizeChanged="ImagePreviewWindow_SizeChanged" KeyUp="Window_KeyUp">
    <Window.Resources>
        <ControlTemplate x:Key="buttonControlTemplate" TargetType="{ x:Type ButtonBase }">
            <Border Name="border" Background="{ TemplateBinding Background }" BorderBrush="{ TemplateBinding BorderBrush }" BorderThickness="{ TemplateBinding BorderThickness }" SnapsToDevicePixels="True">
                <ContentPresenter Name="contentPresenter" ContentTemplate="{ TemplateBinding ContentTemplate }" Content="{ TemplateBinding Content }" ContentStringFormat="{ TemplateBinding ContentStringFormat }" Focusable="False" HorizontalAlignment="{ TemplateBinding HorizontalContentAlignment }" RecognizesAccessKey="True" SnapsToDevicePixels="{ TemplateBinding SnapsToDevicePixels }" VerticalAlignment="{ TemplateBinding VerticalContentAlignment }" Margin="{ TemplateBinding Padding }"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#2d2d2d"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#454545"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="maximizeButtonStyle" TargetType="{ x:Type Image }">
            <Style.Triggers>
                <DataTrigger Binding="{ Binding Path=WindowState }" Value="Normal">
                    <Setter Property="Image.Source" Value="maximize-window.png"/>
                </DataTrigger>
                <DataTrigger Binding="{ Binding Path=WindowState }" Value="Maximized">
                    <Setter Property="Image.Source" Value="normal-window.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#386ed5"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#386ed5"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#ffe5e5e5"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#5a88dc"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#5a88dc"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#789de2"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#789de2"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#fff0f0f0"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#ffd9d9d9"/>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{ x:Type Thumb }">
            <Grid UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path Name="grip" Data="M 0, 6 C0, 6 5.5, 0 5.5, 0 5.5, 0 11, 6 11, 6 11, 6 11, 18 11, 18 11, 18 0, 18 0, 18 0, 18 0, 6 0, 6 z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{ StaticResource SliderThumb.Static.Border }" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{ x:Type Thumb }">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0, 12 C0, 12 5.5, 18 5.5, 18 5.5, 18 11, 12 11, 12 11, 12 11, 0 11, 0 11, 0 0, 0 0, 0 0, 0 0, 12 0, 12 z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{ StaticResource SliderThumb.Static.Borde r}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#ffd6d6d6"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#ffe7eaea"/>
        <Style x:Key="RepeatButtonTransparent" TargetType="{ x:Type RepeatButton }">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{ x:Type RepeatButton }">
                        <Rectangle Width="{ TemplateBinding Width }" Height="{ TemplateBinding Height }" Fill="{ TemplateBinding Background }"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{ x:Type Thumb }">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0, 0 C0, 0 11, 0 11, 0 11, 0 11, 18 11, 18 11, 18 0, 18 0, 18 0, 18 0, 0 0, 0 z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{ StaticResource SliderThumb.Static.Border }" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{ x:Type Slider }">
            <Border Name="border" Background="{ TemplateBinding Background }" BorderThickness="{ TemplateBinding BorderThickness }" BorderBrush="{ TemplateBinding BorderBrush }" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{ TemplateBinding MinHeight }"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar Name="TopTick" Grid.Row="0" Height="4" Fill="{ TemplateBinding Foreground }" Placement="Top" Visibility="Collapsed" Margin="0, 0, 0, 2"/>
                    <TickBar Name="BottomTick" Grid.Row="2" Height="4" Fill="{ TemplateBinding Foreground }" Placement="Bottom" Visibility="Collapsed" Margin="0, 2, 0, 0"/>
                    <Border Name="TrackBackground" Grid.Row="1" Height="4.0" Background="{ StaticResource SliderThumb.Track.Background }" BorderThickness="1" BorderBrush="{ StaticResource SliderThumb.Track.Border }" VerticalAlignment="center" Margin="5, 0">
                        <Canvas Margin="-6, -1">
                            <Rectangle Name="PART_SelectionRange" Height="4.0" Fill="{ DynamicResource { x:Static SystemColors.HighlightBrushKey } }" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{ x:Static Slider.DecreaseLarge }" Style="{ StaticResource RepeatButtonTransparent }"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{ x:Static Slider.IncreaseLarge }" Style="{ StaticResource RepeatButtonTransparent }"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Name="Thumb" Width="11" Height="18" Focusable="False" OverridesDefaultStyle="True" Template="{ StaticResource SliderThumbHorizontalDefault }" VerticalAlignment="Center"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{ StaticResource SliderThumbHorizontalTop }"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5, 2, 5, 0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{ StaticResource SliderThumbHorizontalBottom }"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5, 0, 5, 2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{ x:Type Thumb }">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path Name="grip" Data="M 6, 11 C6, 11 0, 5.5 0, 5.5 0, 5.5 6, 0 6, 0 6, 0 18, 0 18, 0 18, 0 18, 11 18, 11 18, 11 6, 11 6, 11 z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" Stroke="{ StaticResource SliderThumb.Static.Border }"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{ x:Type Thumb }">
            <Grid UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path Name="grip" Data="M 12, 11 C12, 11 18, 5.5 18, 5.5 18, 5.5 12, 0 12, 0 12, 0 0, 0 0, 0 0, 0 0, 11 0, 11 0, 11 12, 11 12, 11 z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" Stroke="{ StaticResource SliderThumb.Static.Border }"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{ x:Type Thumb }">
            <Grid UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path Name="grip" Data="M0.5, 0.5 L18.5, 0.5 18.5, 11.5 0.5, 11.5z" Fill="{ StaticResource SliderThumb.Static.Background }" Stretch="Fill" Stroke="{ StaticResource SliderThumb.Static.Border }"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.MouseOver.Border }"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Pressed.Border }"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Background }"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{ StaticResource SliderThumb.Disabled.Border }"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{ x:Type Slider }">
            <Border Name="border" Background="{ TemplateBinding Background }" BorderThickness="{ TemplateBinding BorderThickness }" BorderBrush="{ TemplateBinding BorderBrush }" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto" MinWidth="{ TemplateBinding MinWidth }"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar Name="TopTick" Grid.Column="0" Width="4" Fill="{ TemplateBinding Foreground }" Placement="Left" Visibility="Collapsed" Margin="0, 0, 2, 0"/>
                    <TickBar Name="BottomTick" Grid.Column="2" Width="4" Fill="{ TemplateBinding Foreground }" Placement="Right" Visibility="Collapsed" Margin="2, 0, 0, 0"/>
                    <Border Name="TrackBackground" Grid.Column="1" Width="4.0" Background="{ StaticResource SliderThumb.Track.Background }" BorderThickness="1" BorderBrush="{ StaticResource SliderThumb.Track.Border }" HorizontalAlignment="center" Margin="0, 5">
                        <Canvas Margin="-1, -6">
                            <Rectangle Name="PART_SelectionRange" Width="4.0" Fill="{ DynamicResource {x:Static SystemColors.HighlightBrushKey } }" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{ x:Static Slider.DecreaseLarge }" Style="{ StaticResource RepeatButtonTransparent }"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{ x:Static Slider.IncreaseLarge }" Style="{ StaticResource RepeatButtonTransparent }"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Name="Thumb" Width="18" Height="11" Focusable="False" OverridesDefaultStyle="True" Template="{ StaticResource SliderThumbVerticalDefault }" VerticalAlignment="Top"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{ StaticResource SliderThumbVerticalLeft }"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2, 5, 0, 5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{ StaticResource SliderThumbVerticalRight }"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0, 5, 2, 5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="sliderStyle" TargetType="{ x:Type Slider }">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ StaticResource SliderThumb.Static.Foreground }"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Template" Value="{ StaticResource SliderHorizontal }"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{ StaticResource SliderVertical }"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{ x:Type MenuItem }">
            <Setter Property="Foreground" Value="{ Binding Path=Foreground, RelativeSource={ RelativeSource AncestorType={ x:Type Menu } } }"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{ x:Type MenuItem }">
                        <Border Name="Border" Background="{ TemplateBinding Background }" BorderBrush="{ TemplateBinding BorderBrush }" BorderThickness="{ TemplateBinding BorderThickness }">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="Col0" Width="Auto" MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="icon" ContentSource="Icon" VerticalAlignment="Center" Margin="4, 0, 6, 0"/>
                                <Grid Name="glyphPanel" Visibility="Hidden" VerticalAlignment="Center" Margin="4, 0, 6, 0">
                                    <Path Name="glyphPanelpath" FlowDirection="LeftToRight" Fill="{ TemplateBinding Foreground }" Data="M0, 2 L0, 4.8 L2.5, 7.4 L7.1, 2.8 L7.1, 0 L2.5, 4.6 z" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Name="headerHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="{ TemplateBinding Padding }"/>
                                <ContentPresenter Name="igtHost" Grid.Column="2" ContentSource="InputGestureText" VerticalAlignment="Center" Margin="8, 1, 8, 1"/>
                                <Grid Name="arrowPanel" Grid.Column="3" VerticalAlignment="Center" Margin="4, 0, 6, 0">
                                    <Path Name="arrowPanelPath" Fill="{ TemplateBinding Foreground }" Data="M0, 0 L0, 8 L4, 4 z" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                </Grid>
                                <Popup Name="subMenuPopup" IsOpen="{ Binding Path=IsSubmenuOpen, RelativeSource={ RelativeSource TemplatedParent } }" Placement="Right" Focusable="false" PopupAnimation="{ DynamicResource { x:Static SystemParameters.MenuPopupAnimationKey } }">
                                    <Border Name="subMenuBorder" Background="#2d2d2d" BorderThickness="1" BorderBrush="#aeaeae" Padding="2, 2, 2, 2">
                                        <Grid Name="subMenu" Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6, 1, 6, 1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="subMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="glyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="igtHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="arrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6, 1, 6, 1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="arrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="submenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0, 2, 0, 2"/>
                            </Trigger>
                            <Trigger Property="Role" Value="submenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0, 2, 0, 2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="arrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="subMenuPopup"/>
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="glyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#454545" TargetName="Border"/>
                                <Setter Property="Foreground" Value="#aeaeae"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#8a8a8a"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{ x:Type ContextMenu }">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{ x:Type ContextMenu }">
                        <Border Background="#2d2d2d" BorderThickness="1" BorderBrush="#aeaeae">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ x:Static MenuItem.TopLevelItemTemplateKey }" TargetType="{ x:Type MenuItem }">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" Margin="6, 3, 6, 3"/>
                </Grid>
            </Border>
        </ControlTemplate>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="45"/>
    </WindowChrome.WindowChrome>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition/>
            <RowDefinition Height="90"/>
        </Grid.RowDefinitions>
        <DockPanel>
            <TextBlock DockPanel.Dock="Left" Foreground="White" Text="{ Binding Path=DisplayFileName }" VerticalAlignment="Center" Margin="10, 0, 0, 0"/>
            <StackPanel DockPanel.Dock="Right" Name="contextPanel" Orientation="Horizontal" FlowDirection="RightToLeft">
                <Button Name="close" Width="30" Height="30" Background="#1e1e1e" BorderThickness="0" Template="{ DynamicResource buttonControlTemplate }" WindowChrome.IsHitTestVisibleInChrome="True" Margin="8, 0, 0, 0" Click="Close_Click">
                    <Image Source="close-window.png" Stretch="None"/>
                </Button>
                <Button Name="maximize" Width="30" Height="30" Background="#1e1e1e" BorderThickness="0" Template="{ DynamicResource buttonControlTemplate }" WindowChrome.IsHitTestVisibleInChrome="True" Click="Maximize_Click">
                    <Image Style="{ StaticResource maximizeButtonStyle }" Stretch="None"/>
                </Button>
                <Button Name="minimize" Width="30" Height="30" Background="#1e1e1e" BorderThickness="0" Template="{ DynamicResource buttonControlTemplate }" WindowChrome.IsHitTestVisibleInChrome="True" Click="Minimize_Click">
                    <Image Source="minimize-window.png" Stretch="None"/>
                </Button>
            </StackPanel>
        </DockPanel>
        <Image Name="image" Grid.Row="1" MaxWidth="{ Binding Path=MaxWidth }" MaxHeight="{ Binding Path=MaxHeight }" Source="{ Binding Path=ImageSource }">
            <Image.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Полноэкранный просмотр" Background="#2d2d2d" Foreground="#aeaeae" Click="FullScreen_Click"/>
                    <MenuItem Header="Повернуть на 90˚ против часовой стрелки" Background="#2d2d2d" Foreground="#aeaeae" Click="LeftTurn_Click"/>
                    <MenuItem Header="Повернуть на 90˚ по часовой стрелке" Background="#2d2d2d" Foreground="#aeaeae" Click="RightTurn_Click"/>
                </ContextMenu>
            </Image.ContextMenu>
        </Image>
        <Grid Grid.Row="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.4*"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Slider Name="sizeAdjustment" Width="120" Maximum="100" Value="50" TickFrequency="1" IsSnapToTickEnabled="True" Style="{ DynamicResource sliderStyle }" ValueChanged="SizeAdjustment_ValueChanged"/>
                    <TextBlock Name="sizeAdjustmentValue" FontWeight="Bold" Foreground="White" Text="{ Binding ElementName=sizeAdjustment, Path=Value }" Margin="5, 0, 0, 0"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Name="leftTurn" Width="40" Height="40" Background="#1e1e1e" BorderThickness="0" ToolTip="Повернуть на 90˚ против часовой стрелки" Template="{ DynamicResource buttonControlTemplate }" Margin="10" Click="LeftTurn_Click">
                        <Image Width="30" Source="left-turn.png"/>
                    </Button>
                    <Button Name="previous" Width="40" Height="40" Background="#1e1e1e" BorderThickness="0" ToolTip="Предыдущее изображение" Template="{ DynamicResource buttonControlTemplate }" Margin="10" Click="Previous_Click">
                        <Image Width="20">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{ Binding Path=IsEnabled, RelativeSource={ RelativeSource Mode=FindAncestor, AncestorType=Button } }" Value="True">
                                            <Setter Property="Source" Value="previous.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{ Binding Path=IsEnabled, RelativeSource={ RelativeSource Mode=FindAncestor, AncestorType=Button } }" Value="False">
                                            <Setter Property="Source" Value="disabled-previous.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="fullScreen" Width="50" Height="50" Background="#1e1e1e" BorderThickness="0" ToolTip="Полноэкранный просмотр" Template="{ DynamicResource buttonControlTemplate }" Margin="10" Click="FullScreen_Click">
                        <Image Width="40" Source="full-screen.png"/>
                    </Button>
                    <Button Name="next" Width="40" Height="40" Background="#1e1e1e" BorderThickness="0" ToolTip="Следующее изображение" Template="{ DynamicResource buttonControlTemplate }" Margin="10" Click="Next_Click">
                        <Image Width="20">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{ Binding Path=IsEnabled, RelativeSource={ RelativeSource Mode=FindAncestor, AncestorType=Button } }" Value="True">
                                            <Setter Property="Source" Value="next.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{ Binding Path=IsEnabled, RelativeSource={ RelativeSource Mode=FindAncestor, AncestorType=Button } }" Value="False">
                                            <Setter Property="Source" Value="disabled-next.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="rightTurn" Width="40" Height="40" Background="#1e1e1e" BorderThickness="0" ToolTip="Повернуть на 90˚ по часовой стрелке" Template="{ DynamicResource buttonControlTemplate }" Margin="10" Click="RightTurn_Click">
                        <Image Width="30" Source="right-turn.png"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>